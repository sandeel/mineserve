Resources:
  AWSEBSecurityGroupSSL:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: { "Fn::GetAtt" : [ "AWSEBSecurityGroup", "GroupId" ]}
      SourceSecurityGroupOwnerId: { "Fn::GetAtt" : [ "AWSEBLoadBalancer", "SourceSecurityGroup.OwnerAlias" ]}
      SourceSecurityGroupId: { "Fn::GetAtt" : [ "AWSEBLoadBalancerSecurityGroup", "GroupId" ]}
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  mysecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: { "Fn::GetAtt" : [ "AWSEBSecurityGroup", "GroupId" ]}
      IpProtocol: tcp
      ToPort: 8080
      FromPort: 8080
      SourceSecurityGroupOwnerId: { "Fn::GetAtt" : [ "AWSEBLoadBalancer", "SourceSecurityGroup.OwnerAlias" ]}
      SourceSecurityGroupId: { "Fn::GetAtt" : [ "AWSEBLoadBalancerSecurityGroup", "GroupId" ]}
  SecurityGroupIngressELB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: { "Fn::GetAtt" : [ "AWSEBLoadBalancerSecurityGroup", "GroupId" ]}
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  SecurityGroupEgressELB:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: { "Fn::GetAtt" : [ "AWSEBLoadBalancerSecurityGroup", "GroupId" ]}
      DestinationSecurityGroupId: { "Fn::GetAtt" : [ "AWSEBSecurityGroup", "GroupId" ]}
      IpProtocol: tcp
      ToPort: 8080
      FromPort: 8080
  AWSEBLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Listeners:
        - {LoadBalancerPort: 80, InstancePort: 8080, Protocol: "HTTP", InstanceProtocol: "HTTP"}
        - {LoadBalancerPort: 443, InstancePort: 80, InstanceProtocol: "HTTP", Protocol: "HTTPS", SSLCertificateID: "arn:aws:acm:us-east-1:987712904847:certificate/81f8e914-5743-46f9-a482-ef5161a33d3b"}
files:
  /etc/httpd/conf.d/ssl.conf:
    mode: 000644
    owner: root
    group: root
    content: |
        Listen 8080
        <VirtualHost *:8080>
            DocumentRoot /var/www/html
            ServerName adventureservers.com
            ServerAlias www.adventureservers.com
            RedirectMatch ^/(.*) https://www.adventureservers.com/$1
            # Other directives here
        </VirtualHost>
